<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on 범&#39;s 개발 블로그</title>
    <link>https://seokbeomKim.github.io/categories/android/</link>
    <description>Recent content in Android on 범&#39;s 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Mar 2020 00:26:40 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/categories/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>안드로이드 파티션</title>
      <link>https://seokbeomKim.github.io/posts/android-partitions/</link>
      <pubDate>Thu, 12 Mar 2020 00:26:40 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/android-partitions/</guid>
      <description>개요 🔗안드로이드 기본 내용이지만 파티션을 착각한 탓에 수정 사항을 반영하지 못해 시간을 날리고 말았다. 커널의 수정사항이라 부트 이미지만 적용하면 변경 사항이 적용될 거라 생각했지만 커널 모듈로 빌드되는 경우 vendor 이미지로 별도로 관리될 수도 있기 때문에 해당 이미지도 함께 추가해서 해당 파티션도 업데이트 해줘야 한다.
안드로이드 파티션 🔗안드로이드 레퍼런스 문서에 따르면 boot, system, vendor, radio를 다음과 같이 설명하고 있다.
  boot: boot 파티션에는 mkbootimg를 통해 결합된 커널 이미지와 RAM 디스크가 포함된다.</description>
    </item>
    
    <item>
      <title>안드로이드의 uevent, ueventd</title>
      <link>https://seokbeomKim.github.io/posts/android_uevent_and_ueventd/</link>
      <pubDate>Thu, 30 Jan 2020 23:34:30 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/android_uevent_and_ueventd/</guid>
      <description>개요 🔗디바이스 트리와 카메라 포팅에 관련된 디바이스 드라이버 코드를 적절하게 수정한 뒤에도 계속해서 디바이스가 정상적으로 동작하지 않았다. 로그 상으로는 디바이스 OPEN에 실패하는 것으로 나왔는데, 원인은 다른 곳에 있었다. ueventd.rc 파일을 수정하지 않아 관련된 디바이스 노드 파일에 대한 권한이 설정되지 않았던 것이 문제였다.
본 포스팅에서는 uevent와 ueventd가 무엇인지 살펴보고 안드로이드 init 과정에서 어떻게 활용되는지 살펴보기로 한다.
여담으로 안드로이드의 uevent는 리눅스의 udev 와 비슷한 역할을 하면서도 조금 다르다. 리눅스의 일반적인 환경 구성이 devfs + udev 로 디바이스 노드 파일들을 관리한다면, 안드로이드는 ueventd를 이용하여 노드 파일들을 관리한다.</description>
    </item>
    
  </channel>
</rss>

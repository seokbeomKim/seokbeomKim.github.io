<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Languages on 범&#39;s 개발 블로그</title>
    <link>https://seokbeomKim.github.io/categories/programming-languages/</link>
    <description>Recent content in Programming Languages on 범&#39;s 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 May 2019 16:30:51 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/categories/programming-languages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Named export와 Default export</title>
      <link>https://seokbeomKim.github.io/posts/default-export-in-typescript/</link>
      <pubDate>Tue, 07 May 2019 16:30:51 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/default-export-in-typescript/</guid>
      <description>개요 모듈 프로그래밍 기반인 자바스크립트는 모듈 방식은 처음 접했을 때 이해가 되지 않았다. 특히 default export와 named export 라는 export 방식과 자바스크립트 버전에 따른 문법 호환 때문에 모듈 export와 import, require를 사용하는 코드를 이해하기 힘들었다.
이 문서에서는 타입스크립트를 이용하여 default, named export 각각을 구현한 뒤 import, require 키워드 각각을 이용하였을 때 레퍼런스 변수가 어떤 값을 가지고 있는지 확인한다.
직접 확인해보자 첫 번째 테스트 먼저 export할 테스트 클래스를 간단하게 구현한다.
// Named Export를 위한 클래스 export class NamedExportClass { test() { console.</description>
    </item>
    
    <item>
      <title>자바의 중첩 클래스(Nested Class)</title>
      <link>https://seokbeomKim.github.io/posts/java-inner-class/</link>
      <pubDate>Fri, 03 May 2019 20:38:14 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/java-inner-class/</guid>
      <description>개요 중첩 클래스(Nested Class)에 대해서 여러 사이트에서 설명해놓은 것이 있지만 잘못 설명되어 있는 부분도 있었다. &amp;lsquo;Nested Class는 Inner Class와 같다.&amp;rsquo; 라는 식으로 기술해놓은 페이지가 많아 이번 기회에 확실하게 정리해놓고자 한다.
중첩 클래스(Nested Class)는 내부 클래스(Inner Class)와 같은 개념이 아니라 포함 관계이다. 중첩 클래스는 static사용 여부에 따라, 정적 중첩 클래스(Static nested class)와 비정적 중첩 클래스(Non-static nested class)로 구분하며, 통상적으로 각각을 정적 중첩 클래스(Static Nested Class), 내부 클래스(Inner Class)라고 한다. 중첩 클래스와 내부 클래스를 같은 개념으로 혼용하는 용례가 많다는데 static 여부에 따라 구분되어 서로 다르다는 것을 반드시 알고 있자.</description>
    </item>
    
    <item>
      <title>Folding in Haskell</title>
      <link>https://seokbeomKim.github.io/posts/folding-in-haskell/</link>
      <pubDate>Wed, 01 May 2019 17:56:20 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/folding-in-haskell/</guid>
      <description>Folding in Haskell 취업을 위한 포트폴리오 준비 작업으로 바쁜 가운데, Functional Programming에 대해 관심이 생겨 Haskell이라는 언어를 배우기 시작했다. (알고리즘이나 데이터베이스 등 배울 것이 많은 데 갈수록 태산이다.) 대학교 시절, xmonad 윈도우즈 매니저를 사용하면서 접한 언어를 이렇게 뒤늦게 배우게 될 줄은 꿈에도 몰랐다.
대표적인 함수형 언어로 알려진 Haskell 에는 Folding 이라는 특별한 개념이 등장한다. Haskell Wiki에서는 Folding을 아래와 같이 설명하고 있다.
 In functional programming, fold (or reduce) is a family of higher order functions that process a data structure in some order and build a return value.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scikit learn on 범&#39;s 개발 블로그</title>
    <link>https://seokbeomKim.github.io/tags/scikit-learn/</link>
    <description>Recent content in scikit learn on 범&#39;s 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 May 2019 17:05:11 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/tags/scikit-learn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>텐서플로우(Tensorflow)와 사이킷런(Scikit-learn)의 차이</title>
      <link>https://seokbeomKim.github.io/posts/tensorflow-scikit-learn/</link>
      <pubDate>Mon, 06 May 2019 17:05:11 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/tensorflow-scikit-learn/</guid>
      <description>책장 속에서 잊혀져 갔던 머신러닝 책을 꺼내 읽기 시작했다. 책을 받았을 당시에는 회사 출장으로 읽을 시간이 없었는데 이제서야 몇 개월이 지나서야 마음이 안정되어 이 책을 꺼내보게 되었다.
각설하고, 책의 모든 내용이 사이킷런(Scikit-learn)을 이용하는데 문득 텐서플로우(Tensorflow)와의 차이점이 무엇인지 궁금해졌다. 통상적으로 머신러닝이라 하면 텐서플로우를 많이 쓰는데, 굳이 사이킷런을 사용하는 이유가 있을까 궁금해졌다.
왜 라이브러리가 아닌 프레임워크라 부르는지 모르겠지만, 이들은 분류, 회귀, 클러스터링, 비정상행위 탐지, 데이터 준비를 위한 다양한 학습 방법을 다루며 인공 신경망 메서드를 포함할 수도, 포함하지 않을 수도 있다.</description>
    </item>
    
  </channel>
</rss>

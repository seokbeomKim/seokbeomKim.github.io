<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>file descriptor on 범&#39;s 개발 블로그</title>
    <link>https://seokbeomKim.github.io/tags/file-descriptor/</link>
    <description>Recent content in file descriptor on 범&#39;s 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 May 2022 00:03:20 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/tags/file-descriptor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>프로세스 종료와 파일 디스크립터</title>
      <link>https://seokbeomKim.github.io/posts/file-close-on-exit/</link>
      <pubDate>Tue, 10 May 2022 00:03:20 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/file-close-on-exit/</guid>
      <description>파일을 open 했는데 close를 안하면? 🔗stdin(0), stdout(2), stderr(3) 이라는 정해진 공식과 함께 리다이렉션과 파이프의 개념만으로도 흥분하던 대학교 시절에 내가 알던 파일 디스크립터의 정의는 태스크가 파일을 열면 얻게 되는 고유 id값 이었다. 그리고 이러한 파일디스크립터는 항상 open 을 해주면 close 를 해줘야 한다고 배웠다. 그런데 막상 단순한 텍스트 파일을 open 한 뒤 프로세스 종료 전 close를 명시적으로 하지 않아도 이로 인한 오류는 발생하지 않는다. 그 전에는 단순하게 프로세스 종료 시에 파일 디스크립터도 함께 정리해주겠거니 하고 넘어갔던 내용이지만 본 글에서는 이 부분에 대해서 간단히(?</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mac_os on A Developer&#39;s Note</title>
    <link>https://seokbeomKim.github.io/tags/mac_os/</link>
    <description>Recent content in mac_os on A Developer&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Dec 2020 00:56:38 +0900</lastBuildDate>
    
	<atom:link href="https://seokbeomKim.github.io/tags/mac_os/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>리눅스 커널 빌드 시 맥 O/S uuid_t 호환성</title>
      <link>https://seokbeomKim.github.io/posts/uuid-compatibility-on-mac-os/</link>
      <pubDate>Thu, 24 Dec 2020 00:56:38 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/uuid-compatibility-on-mac-os/</guid>
      <description>개요 BSD 기반의 맥에서 리눅스 커널 빌드가 안될리 없다고 생각하고 나서 어떻게든 맥에서 리눅스 커널을 빌드하기 위해 이런저런 삽질을 했다. 회사에서의 BSP 업무는 모두 리눅스 환경 아래에서 작업하기 때문에 사실상 큰 의미는 없겠으나, 빌드만을 위해서 맥에서 도커까지 사용해야 하는 솔루션을 납득할 수 없었다.
이에, 지난 포스팅에서 열심히 정리해놓은 가이드를 따라 크로스 컴파일러 준비 후, 커널 빌드를 시도하였으나 어찌된 영문인지 file2alias.c 파일에서 계속해서 빌드 에러가 났다. commit 로그를 뒤져보았는데 uuid_t 관련해서 크게 달라진 점은 없었다.</description>
    </item>
    
    <item>
      <title>맥 OS에서 리눅스 커널 컴파일하기</title>
      <link>https://seokbeomKim.github.io/posts/kernel-compilation-on-mac-os/</link>
      <pubDate>Sun, 12 Jul 2020 22:13:08 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/kernel-compilation-on-mac-os/</guid>
      <description>개요 맥 환경에서 bare-metal이 아닌 리눅스 커널로 컴파일하는 것은 생각했던 것보다 까다롭다. BSD 계열이기는 하지만 커널 컴파일에 필요한 라이브러리와 경로들이 리눅스 환경과 다르기 때문에, 일반적인 리눅스 배포판에서처럼 크로스 컴파일러를 바이너리 형태로 설치한 뒤에 곧바로 커널 빌드를 할 수는 없다.
이 포스팅은 맥에서 리눅스 커널을 빌드하려는 사람들을 위해 작성한 것으로, 아래 구성으로 간략하게 기술하겠다.
 준비 사항 및 제약 사항 크로스 컴파일러 빌드 커널 빌드 끝맺음  본 포스팅에서 확인한 맥 환경은 아래와 같으며 단순 바이너리만 받고자 하는 경우 아래 링크에서 받도록 한다.</description>
    </item>
    
  </channel>
</rss>
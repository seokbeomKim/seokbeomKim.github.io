<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mac_os on 범&#39;s 개발 블로그</title>
    <link>https://seokbeomKim.github.io/tags/mac_os/</link>
    <description>Recent content in mac_os on 범&#39;s 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Feb 2021 02:43:54 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/tags/mac_os/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac에서 GDB 이용한 커널 해킹하기</title>
      <link>https://seokbeomKim.github.io/posts/kernel-hacking-on-mac/</link>
      <pubDate>Sat, 20 Feb 2021 02:43:54 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/kernel-hacking-on-mac/</guid>
      <description>개요 🔗맥에서도 GDB 를 이용하여 커널 디버깅을 하려고 여러 방법을 시도해보았지만 쉽게 되지 않았다. 리눅스 커널 컴파일부터 qemu 실행, gdb attach 까지 단번에 되는게 하나도 없었다. 특히 homebrew 를 통해 설치하는 gdb가 말썽이었는데, aarch64 아키텍처로 빌드된 바이너리로부터 심볼 테이블을 읽지 못했다. 대체 Dave 는 누구인가?
(gdb) file ~/Workspaces/kernel_dev/vmlinux Reading symbols from ~/Workspaces/kernel_dev/vmlinux... I&amp;#39;m sorry, Dave, I can&amp;#39;t do that. Symbol format `elf64-littleaarch64&amp;#39; unknown. 이에 해결을 위한 시나리오는 아래와 같이 구성했다.</description>
    </item>
    
    <item>
      <title>리눅스 커널 빌드 시 맥 O/S uuid_t 호환성</title>
      <link>https://seokbeomKim.github.io/posts/uuid-compatibility-on-mac-os/</link>
      <pubDate>Thu, 24 Dec 2020 00:56:38 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/uuid-compatibility-on-mac-os/</guid>
      <description>개요 🔗BSD 기반의 맥에서 리눅스 커널 빌드가 안될리 없다고 생각하고 나서 어떻게든 맥에서 리눅스 커널을 빌드하기 위해 이런저런 삽질을 했다. 회사에서의 BSP 업무는 모두 리눅스 환경 아래에서 작업하기 때문에 사실상 큰 의미는 없겠으나, 빌드만을 위해서 맥에서 도커까지 사용해야 하는 솔루션을 납득할 수 없었다.
이에, 지난 포스팅에서 열심히 정리해놓은 가이드를 따라 크로스 컴파일러 준비 후, 커널 빌드를 시도하였으나 어찌된 영문인지 file2alias.c 파일에서 계속해서 빌드 에러가 났다. commit 로그를 뒤져보았는데 uuid_t 관련해서 크게 달라진 점은 없었다.</description>
    </item>
    
  </channel>
</rss>

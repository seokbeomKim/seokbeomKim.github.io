<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>function application on 범&#39;s 개발 블로그</title>
    <link>https://seokbeomKim.github.io/tags/function-application/</link>
    <description>Recent content in function application on 범&#39;s 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Aug 2020 18:08:58 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/tags/function-application/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(.) 와 ($) 의 차이</title>
      <link>https://seokbeomKim.github.io/posts/real-haskell-chapter-04/</link>
      <pubDate>Mon, 17 Aug 2020 18:08:58 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/real-haskell-chapter-04/</guid>
      <description>개요 최근 하스켈로 조그만 프로젝트를 시작하기 위해 Real World Haskell 이라는 책 한 권을 구입하여 공부하기 시작했다. Functional Programming 패러다임 자체가 익숙하지 않기에 주어진 문제를 해결하기 위한 접근 방식부터 차근차근 배워나가려 하고 있지만 쉽지 않다. 여타 주요 언어에서 제공하는 loop의 개념이 없고 함수만으로 이루어진 recursive와 pattern matching 또는 function application 등으로 표현되기에 쉽지가 않다. Higher-order function으로 이루어지는 하스켈의 함수에서는 currying을 통해 여러 개의 인자를 갖는 함수를 표현할 수 있다. 이러한 개념과 함께 설명되는 것이 포스팅의 타이틀에 해당하는 (.</description>
    </item>
    
  </channel>
</rss>

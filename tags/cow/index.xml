<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>COW on A Developer&#39;s Note</title>
    <link>https://seokbeomKim.github.io/tags/cow/</link>
    <description>Recent content in COW on A Developer&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2019 18:24:16 +0900</lastBuildDate><atom:link href="https://seokbeomKim.github.io/tags/cow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Copy on Write (CoW or COW)</title>
      <link>https://seokbeomKim.github.io/posts/copy-on-write/</link>
      <pubDate>Thu, 16 May 2019 18:24:16 +0900</pubDate>
      
      <guid>https://seokbeomKim.github.io/posts/copy-on-write/</guid>
      <description>Copy-on-write은 리눅스 커널의 fork() 함수에서 사용하는 기법이다.
전통적인 fork()는 부모 프로세스의 모든 자원을 복사해 자식 프로세스에게 넘겨준다. 하지만 이러한 방식은 공유가 가능한 많은 데이터를 복사하므로 단순하고 비효율적이다. 게다가 새로 만든 프로세스가 곧바로 다른 프로그램을 실행한다면 복사 작업이 모두 헛수고가 되고 만다.
이러한 문제를 해결하기 위해 리눅스에서는 Copy-on-write, COW 기법을 이용하는데 기록사항 발생 시에 복사하는 기능으로 즉각적인 데이터의 복사를 지연하거나 방지하는 기법이다. 때문에 fork()를 사용하게 되면 프로세스의 주소 공간을 모두 복사하는 대신, 부모와 자식 프로세스가 같은 공간을 공유하고 있다가 기록 사항이 발생했을 때 사본을 만든다.</description>
    </item>
    
  </channel>
</rss>
